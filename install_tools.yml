---
- name: Cross-platform Development Tools Installation
  hosts: localhost
  connection: local
  gather_facts: yes
  become: yes

  vars:
    debian_packages:
      - stow
      - ripgrep
      - fd-find
      - neovim
      - python3
      - zoxide
      - tldr
      - atuin
      - zsh
      - tmux
      - coreutils
      - lua5.3
      - tlp
      - build-essential
    arch_packages:
      - stow
      - ripgrep
      - fd
      - neovim
      - python
      - zoxide
      - tldr
      - atuin
      - zsh
      - tmux
      - coreutils
      - lua
      - tlp
      - tlp-ui
      - base-devel
    fedora_packages:
      - stow
      - ripgrep
      - fd-find
      - neovim
      - python3
      - zoxide
      - tldr
      - atuin
      - zsh
      - tmux
      - coreutils
      - lua
      - tlp
      - tlp-rdw
      - '@development-tools'
    macos_packages:
      - stow
      - ripgrep
      - fd
      - neovim
      - python
      - zoxide
      - tldr
      - atuin
      - zsh
      - tmux
      - coreutils
      - lua
    termux_packages:
      - stow
      - ripgrep
      - fd
      - neovim
      - python
      - zoxide
      - tldr
      - atuin
      - zsh
      - tmux
      - coreutils
      - lua

  tasks:
    - name: Install packages on Debian/Ubuntu
      ansible.builtin.apt:
        name: "{{ debian_packages }}"
        state: present
        update_cache: yes
      when: ansible_facts['os_family'] == "Debian"

    - name: Install packages on Arch Linux
      community.general.pacman:
        name: "{{ arch_packages }}"
        state: present
        update_cache: yes
      when: ansible_facts['os_family'] == "Archlinux"

    - name: Install packages on Fedora
      ansible.builtin.dnf:
        name: "{{ fedora_packages }}"
        state: present
        update_cache: yes
      when: ansible_facts['os_family'] == "RedHat"

    - name: Install packages on macOS
      community.general.homebrew:
        name: "{{ macos_packages }}"
        state: present
        update_homebrew: yes
      when: ansible_facts['os_family'] == "Darwin"

    - name: Install Xcode Command Line Tools on macOS
      ansible.builtin.command: xcode-select --install
      args:
        creates: /Library/Developer/CommandLineTools
      when: ansible_facts['os_family'] == "Darwin"

    - name: Install packages on Termux
      ansible.builtin.apt:
        name: "{{ termux_packages }}"
        state: present
        update_cache: yes
      when: ansible_facts['distribution'] == "Termux"

    # - name: Install Rust using rustup
    #   ansible.builtin.shell: |
    #     curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    #   args:
    #     creates: "{{ ansible_env.HOME }}/.cargo/bin/rustc"
    #   when: ansible_facts['os_family'] in ["Debian", "Archlinux", "RedHat", "Darwin"] or ansible_facts['distribution'] == "Termux"

    # - name: Ensure cargo is in PATH
    #   ansible.builtin.shell: |
    #     echo 'export PATH="$HOME/.cargo/bin:$PATH"' >> ~/.bashrc
    #   args:
    #     executable: /bin/bash
    #   when: ansible_facts['os_family'] != "Darwin"

    # - name: Install cargo packages
    #   community.general.cargo:
    #     name:
    #       - cargo
    #   when: ansible_facts['os_family'] in ["Debian", "Archlinux", "RedHat", "Darwin"] or ansible_facts['distribution'] == "Termux"
