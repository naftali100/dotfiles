## my aliases
if [ -f ~/.shell_aliases ]; then
    . ~/.shell_aliases
fi

# ========== 
# ENV exports
export EDITOR=vim
# export MANPAGER="nvim +Man!"
# if [ -n "${NVIM_LISTEN_ADDRESS+x}" ]; then
#   export MANPAGER="/usr/local/bin/nvr -c 'Man!' -o -"
# fi
# export MANPAGER="nvim -c 'set ft=man' -"
export XDG_CONFIG_HOME="$HOME/.config"
SHELL_NAME=$(basename $SHELL)

# update PATH
export PATH="$PATH:$HOME/.local/share/pnpm"
export PATH="$HOME/.composer/vendor/bin:$PATH"
export PATH="$HOME/.config/composer/vendor/bin:$PATH"


# bat as manpager
# export MANPAGER="sh -c 'col -bx | bat -l man -p'"
# export MANPAGER="nvim -R -c 'set ft=man' -c 'map q :q<CR>'"

export CMAKE_GENERATOR=Ninja

# . "$HOME/.deno/env"

# # bun
# export BUN_INSTALL="$HOME/.bun"
# export PATH="$BUN_INSTALL/bin:$PATH"


## set rootles docker host
if [ -f ~/.config/systemd/user/docker.service ]; then
    # export DOCKER_HOST=unix:///run/user/1000/docker.sock
    # export DOCKER_CONTEXT=rootless
fi

#######
# tools setup
#######

# if command -v ruby >/dev/null 2>&1; then
#     export GEM_HOME="$(ruby -e 'puts Gem.user_dir')"
#     export PATH="$PATH:$GEM_HOME/bin"
# fi

# if command -v thefuck >/dev/null 2>&1; then
#     eval $(thefuck --alias f)
# fi

# if [ -f /home/linuxbrew/.linuxbrew/bin/brew ]; then
#     eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
# fi

# # nvm setup
# # export NVM_DIR="$HOME/.nvm"
# # [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# # [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# # fnm
# if type fnm &> /dev/null; then
#     eval "$(fnm env --use-on-cd --shell $SHELL_NAME)"
#     source <(fnm completions --shell $SHELL_NAME)
#     export PATH="$HOME/.local/share/fnm:$PATH"
# fi


# mcfly: bash history search tool
# eval "$(mcfly init $SHELL_NAME)"

if type zoxide &> /dev/null; then
    eval "$(zoxide init $SHELL_NAME)"
fi

# if type kubectl &> /dev/null; then
#   source <(kubectl completion $SHELL_NAME)
# fi

if type atuin &> /dev/null; then
    eval "$(atuin init $SHELL_NAME)"
fi

# if type pnpm &> /dev/null; then
#     eval "$(pnpm completion $SHELL_NAME)"
# fi

# # bun completions
# [ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"


# fix for tilix terminal
# https://gnunn1.github.io/tilix-web/manual/vteconfig/
if [ $TILIX_ID ] || [ $VTE_VERSION ]; then
    source /etc/profile.d/vte.sh
fi

# # Load Angular CLI autocompletion.
# if command -v ng &> /dev/null; then
#     source <(ng completion script)
# fi

# if command -v vagrant >/dev/null 2>&1; then
#   # >>>> Vagrant command completion (start)
#   fpath=(/opt/vagrant/embedded/gems/gems/vagrant-2.3.7/contrib/$SHELL_NAME $fpath)
#   compinit
#   # <<<<  Vagrant command completion (end)
# fi

autoload -U +X bashcompinit && bashcompinit
# complete -o nospace -C /usr/bin/terraform terraform

# # check if kubecolor is installed
# if command -v kubecolor >/dev/null 2>&1; then
#     alias kubectl="kubecolor"
#     compdef kubecolor=kubectl
# fi
